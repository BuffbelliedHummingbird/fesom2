README file for the HLRN-IV FESOM2 benchmark
------------------------------------------

This subdirectory contains input files, reference data and example scripts
to run the HLRN benchmark for the FESOM2 application software.

This README file explains the benchmark procedure.

For a brief description of the FESOM application software we refer to 
the specification guide.


1. Prerequisites:
-----------------

To be able to run the benchmark, the following libraries must be installed 
on your system:

Library   Version  Further information
Metis     5.1.0    http://glaros.dtc.umn.edu/gkhome/views/metis
pARMS     3.2      http://www-users.cs.umn.edu/~saad/software/pARMS/
NetCDF    >=4.0    http://www.unidata.ucar.edu/software/netcdf/index.html

The source codes of Metis and pARMS are provided in the lib/ subdirectory. 
Makefiles and machine-specific include files (Makefile.in) are in the
respective subdirectories.
As NetCDF should also be required for other benchmarks, it is not included
in this package.


2. Benchmark procedure:
-----------------------

- You need to build the executable for your hardware yourself!

- Building the executables

  The provided script  build_all.sh  lets you build the libraries Metis
  and pARMS and the model executables in one step. However, the files
  Makefile.in, in the two library directories and the model directory
  src/ need to be adapted to the specific computer.

  The step-wise build of he application needs the following steps
  1. Build the required libraries in teh 
      cd FESOMROOT/lib/metis-5.1.0; make
      cd FESOMROOT/lib/parms; make
  2. Build the two model excutables 
      cd FESOMROOT/src/; make fesom 
      make clean; make fesom_ini
  This builds the executables 'fesom' and 'fesom_ini' in bin/

  The program 'fesom_ini' is used to compute the partitioning of
  the model mesh and to write the partitioned mesh information into files.
  It needs to be executed with the same number of processes as the model.

  The executable 'fesom' is the model performing the time stepping that
  is to be benchmarked. Thus, running FESOM2 is a two-step procedure: First
  generate the mesh partitioning and second run the model with the
  generated partitioned mesh. 

- Run the benchmark
  
  + Using jobscripts
    The subdirectory run provides an example jobscript to compute the 
    mesh partitioning followed by the model  (job_combined.sh). 
    It can serve a starting point to run the benchmark. 

  + Run the application using different numbers of CPUs.

- NOTICE

  Sometimes it can happen that Metis generates a mesh partitioning that is incompatible
  with FESOM (This will depend on the processor and compiler). When one executes 'fesom'
  with an incompatible mesh, the model stops after the line
           0 mesh_setup... complete  
  If this happens, you can try a different number of processes or change the random
  number seed for Metis. The random number is specified as the preprocessor
  definition METISRANDOMSEED in the compilation and set to a default value of 20.
  It is specified in FESOMROOT/src/Makefile.in in the line
      METIS_DEFS = -DMETISRANDOMSEED=20

  Please also note, that the compute performance can depend on the partitioning.
  Thus, it might be useful to try difference values of the random number seed.

- Job output

  The program is configured so that no model output files are written.
  The standard output of the FEOM benchmark is redirected into files. For the 
  partitioning run this is fesom_ini.out, while it is fesom.out for the actual
  model run.
  
- Validating the results

  The output file 'fesom.out' contains near the end of the file lines providing
  check sum information like

 ...
 ======== CHECKSUMS =========
 ssh:           -2980.59450831914
 Temperature:    688961897.911490
 Salinity:       2630094573.54246
 ...

 You will find the reference output in "data/fesom.out.reference"
 It is required that the absolute value of the difference between your 
 result of the checksums and the reference values does not exceed 
 
 2.0    for ssh,
 400.0  for Temperature and
 200.0  for Salinity
 
 If the difference is larger, the result is regarded to be wrong, and the
 benchmark run will be not accepted.

 Small numerical differences even when running the same executable with
 different numbers of tasks are not uncommon, and are due to small numerical
 noise, different numerical library implementations and different
 (aggressive) compiler optimizations. However, the accuracy defined above
 has to be reached.
  
  
- Performance measurement

  The benchmark is designed to perform 1920 time steps (defined by the variables
  'run_length' and 'step_per_day') in namelist.config
  (These parameters must not be changed to keep the benchmarks comparable!)
  
  For evaluating the performance of this benchmark you will find time measurement
  information at the end of the standard output file fesom.out like this

#-----------------------------------------------------------------------------------------------#
| FESOM2 time measurements                                                                      |
#-----------------------------------------------------------------------------------------------#
| on 02400 PEs                                                                                  |
#-----------------------------------------------------------------------------------------------#
| Nr.  Location                         time       %        var      max  at i1      min  at i2 |
|                                        (s)                (s)       (s)             (s)       |
|   1                     Total:       681.45   100.0      0.00    681.45   697    681.44  1734 |
|   2      Model initialization:       465.93    68.4      1.35    467.48  1328    463.05   571 |
|   3             Time stepping:       215.52    31.6      1.35    218.40   555    213.97  2096 |
|   4              Ice stepping:        64.22     9.4      3.14     78.72  1734     60.10   720 |
|   5            Ocean stepping:       143.27    21.0      2.89    147.26   720    128.97  1724 |
#-----------------------------------------------------------------------------------------------#

  In this table time consumptions of different parts of the model are provided. 
  Here,

  "time" is the average time consumption in seconds of the given model part,
  "%"    is the average relative time consumption,
  "var"  is the standard deviation with regard to all CPUs used by the model run,
  "max"  is the maximum value of time consumption at the
  "i1"-th processor and
  "min"  is the minimum value of time consumption at the
  "i2"-th processor.
  
  E.G. the part no. 1 "Total" nearly represents the over all time consumption of 
  the model run (something like the wall clock time). 
  

- Maximum run time requirement

  The value of timer 3 (Time stepping) should not exceed 180 seconds.

